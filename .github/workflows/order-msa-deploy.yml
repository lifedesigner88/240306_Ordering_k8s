name: deploy MSA depoly

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout github
        uses: actions/checkout@v2

      - name: install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.9"
        id: install

      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-northeast-2

      - name: update cluster information
        run: aws eks update-kubeconfig --name 4team-cluster --region ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build and push docker item image
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: team4-item
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          -f ./order_msa_server/ordering_item_server/Dockerfile ./order_msa_server/ordering_item_server/
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: build and push docker member image
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: team4-member
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          -f ./order_msa_server/ordering_member_server/Dockerfile ./order_msa_server/ordering_member_server/
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG


      - name: eks kubectl apply item
        run: |
          kubectl apply -f ./order_msa_server/ordering_item_server/k8s/order-item-depl-server.yml
          kubectl rollout restart deployment sejong-item-depl
          

      - name: eks kubectl apply member
        run: |
          kubectl apply -f ./order_msa_server/ordering_member_server/k8s/order-member-depl-server.yml
          kubectl rollout restart deployment sejong-member-depl
          
  
          
  
          
          

# 1. depl, service 정의
# 2. ingress-controller 생성
# 3. ingress 적용
# 4. 인증서 작업
# 5. route53에 로드밸런서 dns주소 cname 등록

